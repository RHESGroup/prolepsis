
./arm-benchmarks/src/matmult-int/matmult-int:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_init>:
    8000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8002:	bf00      	nop
    8004:	bcf8      	pop	{r3, r4, r5, r6, r7}
    8006:	bc08      	pop	{r3}
    8008:	469e      	mov	lr, r3
    800a:	4770      	bx	lr

Disassembly of section .text:

0000800c <exit>:
    800c:	b508      	push	{r3, lr}
    800e:	2100      	movs	r1, #0
    8010:	4604      	mov	r4, r0
    8012:	f000 fb61 	bl	86d8 <__call_exitprocs>
    8016:	4b04      	ldr	r3, [pc, #16]	; (8028 <exit+0x1c>)
    8018:	6818      	ldr	r0, [r3, #0]
    801a:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
    801c:	b103      	cbz	r3, 8020 <exit+0x14>
    801e:	4798      	blx	r3
    8020:	4620      	mov	r0, r4
    8022:	f000 fc21 	bl	8868 <_exit>
    8026:	bf00      	nop
    8028:	00008eb8 	.word	0x00008eb8

0000802c <register_fini>:
    802c:	4b02      	ldr	r3, [pc, #8]	; (8038 <register_fini+0xc>)
    802e:	b113      	cbz	r3, 8036 <register_fini+0xa>
    8030:	4802      	ldr	r0, [pc, #8]	; (803c <register_fini+0x10>)
    8032:	f000 bbb3 	b.w	879c <atexit>
    8036:	4770      	bx	lr
    8038:	00000000 	.word	0x00000000
    803c:	000087a9 	.word	0x000087a9

00008040 <__do_global_dtors_aux>:
    8040:	b510      	push	{r4, lr}
    8042:	4c05      	ldr	r4, [pc, #20]	; (8058 <__do_global_dtors_aux+0x18>)
    8044:	7823      	ldrb	r3, [r4, #0]
    8046:	b933      	cbnz	r3, 8056 <__do_global_dtors_aux+0x16>
    8048:	4b04      	ldr	r3, [pc, #16]	; (805c <__do_global_dtors_aux+0x1c>)
    804a:	b113      	cbz	r3, 8052 <__do_global_dtors_aux+0x12>
    804c:	4804      	ldr	r0, [pc, #16]	; (8060 <__do_global_dtors_aux+0x20>)
    804e:	f3af 8000 	nop.w
    8052:	2301      	movs	r3, #1
    8054:	7023      	strb	r3, [r4, #0]
    8056:	bd10      	pop	{r4, pc}
    8058:	00019304 	.word	0x00019304
    805c:	00000000 	.word	0x00000000
    8060:	00008ec4 	.word	0x00008ec4

00008064 <frame_dummy>:
    8064:	b508      	push	{r3, lr}
    8066:	4b03      	ldr	r3, [pc, #12]	; (8074 <frame_dummy+0x10>)
    8068:	b11b      	cbz	r3, 8072 <frame_dummy+0xe>
    806a:	4903      	ldr	r1, [pc, #12]	; (8078 <frame_dummy+0x14>)
    806c:	4803      	ldr	r0, [pc, #12]	; (807c <frame_dummy+0x18>)
    806e:	f3af 8000 	nop.w
    8072:	bd08      	pop	{r3, pc}
    8074:	00000000 	.word	0x00000000
    8078:	00019308 	.word	0x00019308
    807c:	00008ec4 	.word	0x00008ec4

00008080 <_stack_init>:
    8080:	f5a3 3a80 	sub.w	sl, r3, #65536	; 0x10000
    8084:	4770      	bx	lr
    8086:	bf00      	nop

00008088 <_mainCRTStartup>:
    8088:	4b17      	ldr	r3, [pc, #92]	; (80e8 <_mainCRTStartup+0x60>)
    808a:	2b00      	cmp	r3, #0
    808c:	bf08      	it	eq
    808e:	4b13      	ldreq	r3, [pc, #76]	; (80dc <_mainCRTStartup+0x54>)
    8090:	469d      	mov	sp, r3
    8092:	f7ff fff5 	bl	8080 <_stack_init>
    8096:	2100      	movs	r1, #0
    8098:	468b      	mov	fp, r1
    809a:	460f      	mov	r7, r1
    809c:	4813      	ldr	r0, [pc, #76]	; (80ec <_mainCRTStartup+0x64>)
    809e:	4a14      	ldr	r2, [pc, #80]	; (80f0 <_mainCRTStartup+0x68>)
    80a0:	1a12      	subs	r2, r2, r0
    80a2:	f000 fac7 	bl	8634 <memset>
    80a6:	4b0e      	ldr	r3, [pc, #56]	; (80e0 <_mainCRTStartup+0x58>)
    80a8:	2b00      	cmp	r3, #0
    80aa:	d000      	beq.n	80ae <_mainCRTStartup+0x26>
    80ac:	4798      	blx	r3
    80ae:	4b0d      	ldr	r3, [pc, #52]	; (80e4 <_mainCRTStartup+0x5c>)
    80b0:	2b00      	cmp	r3, #0
    80b2:	d000      	beq.n	80b6 <_mainCRTStartup+0x2e>
    80b4:	4798      	blx	r3
    80b6:	2000      	movs	r0, #0
    80b8:	2100      	movs	r1, #0
    80ba:	0004      	movs	r4, r0
    80bc:	000d      	movs	r5, r1
    80be:	480d      	ldr	r0, [pc, #52]	; (80f4 <_mainCRTStartup+0x6c>)
    80c0:	2800      	cmp	r0, #0
    80c2:	d002      	beq.n	80ca <_mainCRTStartup+0x42>
    80c4:	480c      	ldr	r0, [pc, #48]	; (80f8 <_mainCRTStartup+0x70>)
    80c6:	f000 fb69 	bl	879c <atexit>
    80ca:	f000 f9c1 	bl	8450 <__libc_init_array>
    80ce:	0020      	movs	r0, r4
    80d0:	0029      	movs	r1, r5
    80d2:	f000 f999 	bl	8408 <main>
    80d6:	f7ff ff99 	bl	800c <exit>
    80da:	bf00      	nop
    80dc:	00080000 	.word	0x00080000
    80e0:	00000000 	.word	0x00000000
    80e4:	00000000 	.word	0x00000000
    80e8:	00000000 	.word	0x00000000
    80ec:	00019304 	.word	0x00019304
    80f0:	0001b268 	.word	0x0001b268
    80f4:	0000879d 	.word	0x0000879d
    80f8:	000087a9 	.word	0x000087a9

000080fc <warm_caches>:
    80fc:	b580      	push	{r7, lr}
    80fe:	b084      	sub	sp, #16
    8100:	af00      	add	r7, sp, #0
    8102:	6078      	str	r0, [r7, #4]
    8104:	6878      	ldr	r0, [r7, #4]
    8106:	f000 f80d 	bl	8124 <benchmark_body>
    810a:	60f8      	str	r0, [r7, #12]
    810c:	bf00      	nop
    810e:	3710      	adds	r7, #16
    8110:	46bd      	mov	sp, r7
    8112:	bd80      	pop	{r7, pc}

00008114 <benchmark>:
    8114:	b580      	push	{r7, lr}
    8116:	af00      	add	r7, sp, #0
    8118:	202e      	movs	r0, #46	; 0x2e
    811a:	f000 f803 	bl	8124 <benchmark_body>
    811e:	4603      	mov	r3, r0
    8120:	4618      	mov	r0, r3
    8122:	bd80      	pop	{r7, pc}

00008124 <benchmark_body>:
    8124:	b580      	push	{r7, lr}
    8126:	b084      	sub	sp, #16
    8128:	af00      	add	r7, sp, #0
    812a:	6078      	str	r0, [r7, #4]
    812c:	2300      	movs	r3, #0
    812e:	60fb      	str	r3, [r7, #12]
    8130:	e019      	b.n	8166 <benchmark_body+0x42>
    8132:	4a11      	ldr	r2, [pc, #68]	; (8178 <benchmark_body+0x54>)
    8134:	4b11      	ldr	r3, [pc, #68]	; (817c <benchmark_body+0x58>)
    8136:	4610      	mov	r0, r2
    8138:	4619      	mov	r1, r3
    813a:	f44f 63c8 	mov.w	r3, #1600	; 0x640
    813e:	461a      	mov	r2, r3
    8140:	f000 f9de 	bl	8500 <memcpy>
    8144:	4a0e      	ldr	r2, [pc, #56]	; (8180 <benchmark_body+0x5c>)
    8146:	4b0f      	ldr	r3, [pc, #60]	; (8184 <benchmark_body+0x60>)
    8148:	4610      	mov	r0, r2
    814a:	4619      	mov	r1, r3
    814c:	f44f 63c8 	mov.w	r3, #1600	; 0x640
    8150:	461a      	mov	r2, r3
    8152:	f000 f9d5 	bl	8500 <memcpy>
    8156:	4a0c      	ldr	r2, [pc, #48]	; (8188 <benchmark_body+0x64>)
    8158:	4909      	ldr	r1, [pc, #36]	; (8180 <benchmark_body+0x5c>)
    815a:	4807      	ldr	r0, [pc, #28]	; (8178 <benchmark_body+0x54>)
    815c:	f000 f822 	bl	81a4 <Test>
    8160:	68fb      	ldr	r3, [r7, #12]
    8162:	3301      	adds	r3, #1
    8164:	60fb      	str	r3, [r7, #12]
    8166:	68fa      	ldr	r2, [r7, #12]
    8168:	687b      	ldr	r3, [r7, #4]
    816a:	429a      	cmp	r2, r3
    816c:	dbe1      	blt.n	8132 <benchmark_body+0xe>
    816e:	2300      	movs	r3, #0
    8170:	4618      	mov	r0, r3
    8172:	3710      	adds	r7, #16
    8174:	46bd      	mov	sp, r7
    8176:	bd80      	pop	{r7, pc}
    8178:	00019964 	.word	0x00019964
    817c:	00019324 	.word	0x00019324
    8180:	0001a5e4 	.word	0x0001a5e4
    8184:	00019fa4 	.word	0x00019fa4
    8188:	0001ac24 	.word	0x0001ac24

0000818c <InitSeed>:
    818c:	b480      	push	{r7}
    818e:	af00      	add	r7, sp, #0
    8190:	4b03      	ldr	r3, [pc, #12]	; (81a0 <InitSeed+0x14>)
    8192:	2200      	movs	r2, #0
    8194:	601a      	str	r2, [r3, #0]
    8196:	bf00      	nop
    8198:	46bd      	mov	sp, r7
    819a:	bc80      	pop	{r7}
    819c:	4770      	bx	lr
    819e:	bf00      	nop
    81a0:	00019320 	.word	0x00019320

000081a4 <Test>:
    81a4:	b580      	push	{r7, lr}
    81a6:	b084      	sub	sp, #16
    81a8:	af00      	add	r7, sp, #0
    81aa:	60f8      	str	r0, [r7, #12]
    81ac:	60b9      	str	r1, [r7, #8]
    81ae:	607a      	str	r2, [r7, #4]
    81b0:	687a      	ldr	r2, [r7, #4]
    81b2:	68b9      	ldr	r1, [r7, #8]
    81b4:	68f8      	ldr	r0, [r7, #12]
    81b6:	f000 f827 	bl	8208 <Multiply>
    81ba:	bf00      	nop
    81bc:	3710      	adds	r7, #16
    81be:	46bd      	mov	sp, r7
    81c0:	bd80      	pop	{r7, pc}
    81c2:	0000      	movs	r0, r0

000081c4 <RandomInteger>:
    81c4:	b480      	push	{r7}
    81c6:	af00      	add	r7, sp, #0
    81c8:	4b0d      	ldr	r3, [pc, #52]	; (8200 <RandomInteger+0x3c>)
    81ca:	681a      	ldr	r2, [r3, #0]
    81cc:	4613      	mov	r3, r2
    81ce:	015b      	lsls	r3, r3, #5
    81d0:	4413      	add	r3, r2
    81d2:	009b      	lsls	r3, r3, #2
    81d4:	4413      	add	r3, r2
    81d6:	f103 0251 	add.w	r2, r3, #81	; 0x51
    81da:	4b0a      	ldr	r3, [pc, #40]	; (8204 <RandomInteger+0x40>)
    81dc:	fb83 1302 	smull	r1, r3, r3, r2
    81e0:	1259      	asrs	r1, r3, #9
    81e2:	17d3      	asrs	r3, r2, #31
    81e4:	1acb      	subs	r3, r1, r3
    81e6:	f641 719f 	movw	r1, #8095	; 0x1f9f
    81ea:	fb01 f303 	mul.w	r3, r1, r3
    81ee:	1ad3      	subs	r3, r2, r3
    81f0:	4a03      	ldr	r2, [pc, #12]	; (8200 <RandomInteger+0x3c>)
    81f2:	6013      	str	r3, [r2, #0]
    81f4:	4b02      	ldr	r3, [pc, #8]	; (8200 <RandomInteger+0x3c>)
    81f6:	681b      	ldr	r3, [r3, #0]
    81f8:	4618      	mov	r0, r3
    81fa:	46bd      	mov	sp, r7
    81fc:	bc80      	pop	{r7}
    81fe:	4770      	bx	lr
    8200:	00019320 	.word	0x00019320
    8204:	103114c7 	.word	0x103114c7

00008208 <Multiply>:
    8208:	b4f0      	push	{r4, r5, r6, r7}
    820a:	b084      	sub	sp, #16
    820c:	af00      	add	r7, sp, #0
    820e:	60f8      	str	r0, [r7, #12]
    8210:	60b9      	str	r1, [r7, #8]
    8212:	607a      	str	r2, [r7, #4]
    8214:	2500      	movs	r5, #0
    8216:	e040      	b.n	829a <Multiply+0x92>
    8218:	2400      	movs	r4, #0
    821a:	e03b      	b.n	8294 <Multiply+0x8c>
    821c:	462a      	mov	r2, r5
    821e:	4613      	mov	r3, r2
    8220:	009b      	lsls	r3, r3, #2
    8222:	4413      	add	r3, r2
    8224:	011b      	lsls	r3, r3, #4
    8226:	461a      	mov	r2, r3
    8228:	687b      	ldr	r3, [r7, #4]
    822a:	4413      	add	r3, r2
    822c:	2200      	movs	r2, #0
    822e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
    8232:	2600      	movs	r6, #0
    8234:	e02b      	b.n	828e <Multiply+0x86>
    8236:	462a      	mov	r2, r5
    8238:	4613      	mov	r3, r2
    823a:	009b      	lsls	r3, r3, #2
    823c:	4413      	add	r3, r2
    823e:	011b      	lsls	r3, r3, #4
    8240:	461a      	mov	r2, r3
    8242:	687b      	ldr	r3, [r7, #4]
    8244:	4413      	add	r3, r2
    8246:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
    824a:	462a      	mov	r2, r5
    824c:	4613      	mov	r3, r2
    824e:	009b      	lsls	r3, r3, #2
    8250:	4413      	add	r3, r2
    8252:	011b      	lsls	r3, r3, #4
    8254:	461a      	mov	r2, r3
    8256:	68fb      	ldr	r3, [r7, #12]
    8258:	4413      	add	r3, r2
    825a:	f853 2026 	ldr.w	r2, [r3, r6, lsl #2]
    825e:	4630      	mov	r0, r6
    8260:	4603      	mov	r3, r0
    8262:	009b      	lsls	r3, r3, #2
    8264:	4403      	add	r3, r0
    8266:	011b      	lsls	r3, r3, #4
    8268:	4618      	mov	r0, r3
    826a:	68bb      	ldr	r3, [r7, #8]
    826c:	4403      	add	r3, r0
    826e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
    8272:	fb03 f202 	mul.w	r2, r3, r2
    8276:	4628      	mov	r0, r5
    8278:	4603      	mov	r3, r0
    827a:	009b      	lsls	r3, r3, #2
    827c:	4403      	add	r3, r0
    827e:	011b      	lsls	r3, r3, #4
    8280:	4618      	mov	r0, r3
    8282:	687b      	ldr	r3, [r7, #4]
    8284:	4403      	add	r3, r0
    8286:	440a      	add	r2, r1
    8288:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
    828c:	3601      	adds	r6, #1
    828e:	2e13      	cmp	r6, #19
    8290:	ddd1      	ble.n	8236 <Multiply+0x2e>
    8292:	3401      	adds	r4, #1
    8294:	2c13      	cmp	r4, #19
    8296:	ddc1      	ble.n	821c <Multiply+0x14>
    8298:	3501      	adds	r5, #1
    829a:	2d13      	cmp	r5, #19
    829c:	ddbc      	ble.n	8218 <Multiply+0x10>
    829e:	bf00      	nop
    82a0:	bf00      	nop
    82a2:	3710      	adds	r7, #16
    82a4:	46bd      	mov	sp, r7
    82a6:	bcf0      	pop	{r4, r5, r6, r7}
    82a8:	4770      	bx	lr
    82aa:	0000      	movs	r0, r0

000082ac <initialise_benchmark>:
    82ac:	b580      	push	{r7, lr}
    82ae:	b082      	sub	sp, #8
    82b0:	af00      	add	r7, sp, #0
    82b2:	f7ff ff6b 	bl	818c <InitSeed>
    82b6:	2300      	movs	r3, #0
    82b8:	607b      	str	r3, [r7, #4]
    82ba:	e018      	b.n	82ee <initialise_benchmark+0x42>
    82bc:	2300      	movs	r3, #0
    82be:	603b      	str	r3, [r7, #0]
    82c0:	e00f      	b.n	82e2 <initialise_benchmark+0x36>
    82c2:	f7ff ff7f 	bl	81c4 <RandomInteger>
    82c6:	4601      	mov	r1, r0
    82c8:	481c      	ldr	r0, [pc, #112]	; (833c <initialise_benchmark+0x90>)
    82ca:	687a      	ldr	r2, [r7, #4]
    82cc:	4613      	mov	r3, r2
    82ce:	009b      	lsls	r3, r3, #2
    82d0:	4413      	add	r3, r2
    82d2:	009b      	lsls	r3, r3, #2
    82d4:	683a      	ldr	r2, [r7, #0]
    82d6:	4413      	add	r3, r2
    82d8:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
    82dc:	683b      	ldr	r3, [r7, #0]
    82de:	3301      	adds	r3, #1
    82e0:	603b      	str	r3, [r7, #0]
    82e2:	683b      	ldr	r3, [r7, #0]
    82e4:	2b13      	cmp	r3, #19
    82e6:	ddec      	ble.n	82c2 <initialise_benchmark+0x16>
    82e8:	687b      	ldr	r3, [r7, #4]
    82ea:	3301      	adds	r3, #1
    82ec:	607b      	str	r3, [r7, #4]
    82ee:	687b      	ldr	r3, [r7, #4]
    82f0:	2b13      	cmp	r3, #19
    82f2:	dde3      	ble.n	82bc <initialise_benchmark+0x10>
    82f4:	2300      	movs	r3, #0
    82f6:	607b      	str	r3, [r7, #4]
    82f8:	e018      	b.n	832c <initialise_benchmark+0x80>
    82fa:	2300      	movs	r3, #0
    82fc:	603b      	str	r3, [r7, #0]
    82fe:	e00f      	b.n	8320 <initialise_benchmark+0x74>
    8300:	f7ff ff60 	bl	81c4 <RandomInteger>
    8304:	4601      	mov	r1, r0
    8306:	480e      	ldr	r0, [pc, #56]	; (8340 <initialise_benchmark+0x94>)
    8308:	687a      	ldr	r2, [r7, #4]
    830a:	4613      	mov	r3, r2
    830c:	009b      	lsls	r3, r3, #2
    830e:	4413      	add	r3, r2
    8310:	009b      	lsls	r3, r3, #2
    8312:	683a      	ldr	r2, [r7, #0]
    8314:	4413      	add	r3, r2
    8316:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
    831a:	683b      	ldr	r3, [r7, #0]
    831c:	3301      	adds	r3, #1
    831e:	603b      	str	r3, [r7, #0]
    8320:	683b      	ldr	r3, [r7, #0]
    8322:	2b13      	cmp	r3, #19
    8324:	ddec      	ble.n	8300 <initialise_benchmark+0x54>
    8326:	687b      	ldr	r3, [r7, #4]
    8328:	3301      	adds	r3, #1
    832a:	607b      	str	r3, [r7, #4]
    832c:	687b      	ldr	r3, [r7, #4]
    832e:	2b13      	cmp	r3, #19
    8330:	dde3      	ble.n	82fa <initialise_benchmark+0x4e>
    8332:	bf00      	nop
    8334:	bf00      	nop
    8336:	3708      	adds	r7, #8
    8338:	46bd      	mov	sp, r7
    833a:	bd80      	pop	{r7, pc}
    833c:	00019324 	.word	0x00019324
    8340:	00019fa4 	.word	0x00019fa4

00008344 <verify_benchmark>:
    8344:	b580      	push	{r7, lr}
    8346:	f5ad 6dc9 	sub.w	sp, sp, #1608	; 0x648
    834a:	af00      	add	r7, sp, #0
    834c:	f507 63c9 	add.w	r3, r7, #1608	; 0x648
    8350:	f2a3 6344 	subw	r3, r3, #1604	; 0x644
    8354:	6018      	str	r0, [r3, #0]
    8356:	f507 63c9 	add.w	r3, r7, #1608	; 0x648
    835a:	f5a3 63c8 	sub.w	r3, r3, #1600	; 0x640
    835e:	4a0d      	ldr	r2, [pc, #52]	; (8394 <verify_benchmark+0x50>)
    8360:	4618      	mov	r0, r3
    8362:	4611      	mov	r1, r2
    8364:	f44f 63c8 	mov.w	r3, #1600	; 0x640
    8368:	461a      	mov	r2, r3
    836a:	f000 f8c9 	bl	8500 <memcpy>
    836e:	f107 0308 	add.w	r3, r7, #8
    8372:	f44f 62c8 	mov.w	r2, #1600	; 0x640
    8376:	4619      	mov	r1, r3
    8378:	4807      	ldr	r0, [pc, #28]	; (8398 <verify_benchmark+0x54>)
    837a:	f000 f88d 	bl	8498 <memcmp>
    837e:	4603      	mov	r3, r0
    8380:	2b00      	cmp	r3, #0
    8382:	bf0c      	ite	eq
    8384:	2301      	moveq	r3, #1
    8386:	2300      	movne	r3, #0
    8388:	b2db      	uxtb	r3, r3
    838a:	4618      	mov	r0, r3
    838c:	f507 67c9 	add.w	r7, r7, #1608	; 0x648
    8390:	46bd      	mov	sp, r7
    8392:	bd80      	pop	{r7, pc}
    8394:	00008878 	.word	0x00008878
    8398:	0001ac24 	.word	0x0001ac24

0000839c <initialise_board>:
    839c:	b480      	push	{r7}
    839e:	af00      	add	r7, sp, #0
    83a0:	4b06      	ldr	r3, [pc, #24]	; (83bc <initialise_board+0x20>)
    83a2:	681b      	ldr	r3, [r3, #0]
    83a4:	4a05      	ldr	r2, [pc, #20]	; (83bc <initialise_board+0x20>)
    83a6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
    83aa:	6013      	str	r3, [r2, #0]
    83ac:	4b04      	ldr	r3, [pc, #16]	; (83c0 <initialise_board+0x24>)
    83ae:	2200      	movs	r2, #0
    83b0:	601a      	str	r2, [r3, #0]
    83b2:	bf00      	nop
    83b4:	46bd      	mov	sp, r7
    83b6:	bc80      	pop	{r7}
    83b8:	4770      	bx	lr
    83ba:	bf00      	nop
    83bc:	e000edfc 	.word	0xe000edfc
    83c0:	e0001004 	.word	0xe0001004

000083c4 <start_trigger>:
    83c4:	b480      	push	{r7}
    83c6:	af00      	add	r7, sp, #0
    83c8:	4b04      	ldr	r3, [pc, #16]	; (83dc <start_trigger+0x18>)
    83ca:	681b      	ldr	r3, [r3, #0]
    83cc:	4a03      	ldr	r2, [pc, #12]	; (83dc <start_trigger+0x18>)
    83ce:	f043 0301 	orr.w	r3, r3, #1
    83d2:	6013      	str	r3, [r2, #0]
    83d4:	bf00      	nop
    83d6:	46bd      	mov	sp, r7
    83d8:	bc80      	pop	{r7}
    83da:	4770      	bx	lr
    83dc:	e0001000 	.word	0xe0001000

000083e0 <stop_trigger>:
    83e0:	b480      	push	{r7}
    83e2:	af00      	add	r7, sp, #0
    83e4:	4b06      	ldr	r3, [pc, #24]	; (8400 <stop_trigger+0x20>)
    83e6:	2200      	movs	r2, #0
    83e8:	601a      	str	r2, [r3, #0]
    83ea:	4b06      	ldr	r3, [pc, #24]	; (8404 <stop_trigger+0x24>)
    83ec:	681b      	ldr	r3, [r3, #0]
    83ee:	4a05      	ldr	r2, [pc, #20]	; (8404 <stop_trigger+0x24>)
    83f0:	f023 0301 	bic.w	r3, r3, #1
    83f4:	6013      	str	r3, [r2, #0]
    83f6:	bf00      	nop
    83f8:	46bd      	mov	sp, r7
    83fa:	bc80      	pop	{r7}
    83fc:	4770      	bx	lr
    83fe:	bf00      	nop
    8400:	e0001004 	.word	0xe0001004
    8404:	e0001000 	.word	0xe0001000

00008408 <main>:
    8408:	b580      	push	{r7, lr}
    840a:	b084      	sub	sp, #16
    840c:	af00      	add	r7, sp, #0
    840e:	6078      	str	r0, [r7, #4]
    8410:	6039      	str	r1, [r7, #0]
    8412:	f7ff ffc3 	bl	839c <initialise_board>
    8416:	f7ff ff49 	bl	82ac <initialise_benchmark>
    841a:	2001      	movs	r0, #1
    841c:	f7ff fe6e 	bl	80fc <warm_caches>
    8420:	f7ff ffd0 	bl	83c4 <start_trigger>
    8424:	f7ff fe76 	bl	8114 <benchmark>
    8428:	4603      	mov	r3, r0
    842a:	60bb      	str	r3, [r7, #8]
    842c:	f7ff ffd8 	bl	83e0 <stop_trigger>
    8430:	68bb      	ldr	r3, [r7, #8]
    8432:	4618      	mov	r0, r3
    8434:	f7ff ff86 	bl	8344 <verify_benchmark>
    8438:	60f8      	str	r0, [r7, #12]
    843a:	68fb      	ldr	r3, [r7, #12]
    843c:	2b00      	cmp	r3, #0
    843e:	bf0c      	ite	eq
    8440:	2301      	moveq	r3, #1
    8442:	2300      	movne	r3, #0
    8444:	b2db      	uxtb	r3, r3
    8446:	4618      	mov	r0, r3
    8448:	3710      	adds	r7, #16
    844a:	46bd      	mov	sp, r7
    844c:	bd80      	pop	{r7, pc}
    844e:	0000      	movs	r0, r0

00008450 <__libc_init_array>:
    8450:	b570      	push	{r4, r5, r6, lr}
    8452:	4e0d      	ldr	r6, [pc, #52]	; (8488 <__libc_init_array+0x38>)
    8454:	4d0d      	ldr	r5, [pc, #52]	; (848c <__libc_init_array+0x3c>)
    8456:	1b76      	subs	r6, r6, r5
    8458:	10b6      	asrs	r6, r6, #2
    845a:	d006      	beq.n	846a <__libc_init_array+0x1a>
    845c:	2400      	movs	r4, #0
    845e:	f855 3b04 	ldr.w	r3, [r5], #4
    8462:	3401      	adds	r4, #1
    8464:	4798      	blx	r3
    8466:	42a6      	cmp	r6, r4
    8468:	d1f9      	bne.n	845e <__libc_init_array+0xe>
    846a:	4e09      	ldr	r6, [pc, #36]	; (8490 <__libc_init_array+0x40>)
    846c:	4d09      	ldr	r5, [pc, #36]	; (8494 <__libc_init_array+0x44>)
    846e:	1b76      	subs	r6, r6, r5
    8470:	f7ff fdc6 	bl	8000 <_init>
    8474:	10b6      	asrs	r6, r6, #2
    8476:	d006      	beq.n	8486 <__libc_init_array+0x36>
    8478:	2400      	movs	r4, #0
    847a:	f855 3b04 	ldr.w	r3, [r5], #4
    847e:	3401      	adds	r4, #1
    8480:	4798      	blx	r3
    8482:	42a6      	cmp	r6, r4
    8484:	d1f9      	bne.n	847a <__libc_init_array+0x2a>
    8486:	bd70      	pop	{r4, r5, r6, pc}
    8488:	00018ec8 	.word	0x00018ec8
    848c:	00018ec8 	.word	0x00018ec8
    8490:	00018ed0 	.word	0x00018ed0
    8494:	00018ec8 	.word	0x00018ec8

00008498 <memcmp>:
    8498:	2a03      	cmp	r2, #3
    849a:	b510      	push	{r4, lr}
    849c:	d917      	bls.n	84ce <memcmp+0x36>
    849e:	ea40 0c01 	orr.w	ip, r0, r1
    84a2:	f01c 0f03 	tst.w	ip, #3
    84a6:	4604      	mov	r4, r0
    84a8:	460b      	mov	r3, r1
    84aa:	d123      	bne.n	84f4 <memcmp+0x5c>
    84ac:	4619      	mov	r1, r3
    84ae:	4620      	mov	r0, r4
    84b0:	f8d1 e000 	ldr.w	lr, [r1]
    84b4:	f8d0 c000 	ldr.w	ip, [r0]
    84b8:	45f4      	cmp	ip, lr
    84ba:	f104 0404 	add.w	r4, r4, #4
    84be:	f103 0304 	add.w	r3, r3, #4
    84c2:	d117      	bne.n	84f4 <memcmp+0x5c>
    84c4:	3a04      	subs	r2, #4
    84c6:	2a03      	cmp	r2, #3
    84c8:	4620      	mov	r0, r4
    84ca:	4619      	mov	r1, r3
    84cc:	d8ee      	bhi.n	84ac <memcmp+0x14>
    84ce:	1e54      	subs	r4, r2, #1
    84d0:	b1a2      	cbz	r2, 84fc <memcmp+0x64>
    84d2:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
    84d6:	3901      	subs	r1, #1
    84d8:	e001      	b.n	84de <memcmp+0x46>
    84da:	18c3      	adds	r3, r0, r3
    84dc:	d00c      	beq.n	84f8 <memcmp+0x60>
    84de:	f81c ef01 	ldrb.w	lr, [ip, #1]!
    84e2:	f811 2f01 	ldrb.w	r2, [r1, #1]!
    84e6:	4596      	cmp	lr, r2
    84e8:	eba4 030c 	sub.w	r3, r4, ip
    84ec:	d0f5      	beq.n	84da <memcmp+0x42>
    84ee:	ebae 0002 	sub.w	r0, lr, r2
    84f2:	bd10      	pop	{r4, pc}
    84f4:	1e54      	subs	r4, r2, #1
    84f6:	e7ec      	b.n	84d2 <memcmp+0x3a>
    84f8:	4618      	mov	r0, r3
    84fa:	bd10      	pop	{r4, pc}
    84fc:	4610      	mov	r0, r2
    84fe:	bd10      	pop	{r4, pc}

00008500 <memcpy>:
    8500:	4684      	mov	ip, r0
    8502:	ea41 0300 	orr.w	r3, r1, r0
    8506:	f013 0303 	ands.w	r3, r3, #3
    850a:	d16d      	bne.n	85e8 <memcpy+0xe8>
    850c:	3a40      	subs	r2, #64	; 0x40
    850e:	d341      	bcc.n	8594 <memcpy+0x94>
    8510:	f851 3b04 	ldr.w	r3, [r1], #4
    8514:	f840 3b04 	str.w	r3, [r0], #4
    8518:	f851 3b04 	ldr.w	r3, [r1], #4
    851c:	f840 3b04 	str.w	r3, [r0], #4
    8520:	f851 3b04 	ldr.w	r3, [r1], #4
    8524:	f840 3b04 	str.w	r3, [r0], #4
    8528:	f851 3b04 	ldr.w	r3, [r1], #4
    852c:	f840 3b04 	str.w	r3, [r0], #4
    8530:	f851 3b04 	ldr.w	r3, [r1], #4
    8534:	f840 3b04 	str.w	r3, [r0], #4
    8538:	f851 3b04 	ldr.w	r3, [r1], #4
    853c:	f840 3b04 	str.w	r3, [r0], #4
    8540:	f851 3b04 	ldr.w	r3, [r1], #4
    8544:	f840 3b04 	str.w	r3, [r0], #4
    8548:	f851 3b04 	ldr.w	r3, [r1], #4
    854c:	f840 3b04 	str.w	r3, [r0], #4
    8550:	f851 3b04 	ldr.w	r3, [r1], #4
    8554:	f840 3b04 	str.w	r3, [r0], #4
    8558:	f851 3b04 	ldr.w	r3, [r1], #4
    855c:	f840 3b04 	str.w	r3, [r0], #4
    8560:	f851 3b04 	ldr.w	r3, [r1], #4
    8564:	f840 3b04 	str.w	r3, [r0], #4
    8568:	f851 3b04 	ldr.w	r3, [r1], #4
    856c:	f840 3b04 	str.w	r3, [r0], #4
    8570:	f851 3b04 	ldr.w	r3, [r1], #4
    8574:	f840 3b04 	str.w	r3, [r0], #4
    8578:	f851 3b04 	ldr.w	r3, [r1], #4
    857c:	f840 3b04 	str.w	r3, [r0], #4
    8580:	f851 3b04 	ldr.w	r3, [r1], #4
    8584:	f840 3b04 	str.w	r3, [r0], #4
    8588:	f851 3b04 	ldr.w	r3, [r1], #4
    858c:	f840 3b04 	str.w	r3, [r0], #4
    8590:	3a40      	subs	r2, #64	; 0x40
    8592:	d2bd      	bcs.n	8510 <memcpy+0x10>
    8594:	3230      	adds	r2, #48	; 0x30
    8596:	d311      	bcc.n	85bc <memcpy+0xbc>
    8598:	f851 3b04 	ldr.w	r3, [r1], #4
    859c:	f840 3b04 	str.w	r3, [r0], #4
    85a0:	f851 3b04 	ldr.w	r3, [r1], #4
    85a4:	f840 3b04 	str.w	r3, [r0], #4
    85a8:	f851 3b04 	ldr.w	r3, [r1], #4
    85ac:	f840 3b04 	str.w	r3, [r0], #4
    85b0:	f851 3b04 	ldr.w	r3, [r1], #4
    85b4:	f840 3b04 	str.w	r3, [r0], #4
    85b8:	3a10      	subs	r2, #16
    85ba:	d2ed      	bcs.n	8598 <memcpy+0x98>
    85bc:	320c      	adds	r2, #12
    85be:	d305      	bcc.n	85cc <memcpy+0xcc>
    85c0:	f851 3b04 	ldr.w	r3, [r1], #4
    85c4:	f840 3b04 	str.w	r3, [r0], #4
    85c8:	3a04      	subs	r2, #4
    85ca:	d2f9      	bcs.n	85c0 <memcpy+0xc0>
    85cc:	3204      	adds	r2, #4
    85ce:	d008      	beq.n	85e2 <memcpy+0xe2>
    85d0:	07d2      	lsls	r2, r2, #31
    85d2:	bf1c      	itt	ne
    85d4:	f811 3b01 	ldrbne.w	r3, [r1], #1
    85d8:	f800 3b01 	strbne.w	r3, [r0], #1
    85dc:	d301      	bcc.n	85e2 <memcpy+0xe2>
    85de:	880b      	ldrh	r3, [r1, #0]
    85e0:	8003      	strh	r3, [r0, #0]
    85e2:	4660      	mov	r0, ip
    85e4:	4770      	bx	lr
    85e6:	bf00      	nop
    85e8:	2a08      	cmp	r2, #8
    85ea:	d313      	bcc.n	8614 <memcpy+0x114>
    85ec:	078b      	lsls	r3, r1, #30
    85ee:	d08d      	beq.n	850c <memcpy+0xc>
    85f0:	f010 0303 	ands.w	r3, r0, #3
    85f4:	d08a      	beq.n	850c <memcpy+0xc>
    85f6:	f1c3 0304 	rsb	r3, r3, #4
    85fa:	1ad2      	subs	r2, r2, r3
    85fc:	07db      	lsls	r3, r3, #31
    85fe:	bf1c      	itt	ne
    8600:	f811 3b01 	ldrbne.w	r3, [r1], #1
    8604:	f800 3b01 	strbne.w	r3, [r0], #1
    8608:	d380      	bcc.n	850c <memcpy+0xc>
    860a:	f831 3b02 	ldrh.w	r3, [r1], #2
    860e:	f820 3b02 	strh.w	r3, [r0], #2
    8612:	e77b      	b.n	850c <memcpy+0xc>
    8614:	3a04      	subs	r2, #4
    8616:	d3d9      	bcc.n	85cc <memcpy+0xcc>
    8618:	3a01      	subs	r2, #1
    861a:	f811 3b01 	ldrb.w	r3, [r1], #1
    861e:	f800 3b01 	strb.w	r3, [r0], #1
    8622:	d2f9      	bcs.n	8618 <memcpy+0x118>
    8624:	780b      	ldrb	r3, [r1, #0]
    8626:	7003      	strb	r3, [r0, #0]
    8628:	784b      	ldrb	r3, [r1, #1]
    862a:	7043      	strb	r3, [r0, #1]
    862c:	788b      	ldrb	r3, [r1, #2]
    862e:	7083      	strb	r3, [r0, #2]
    8630:	4660      	mov	r0, ip
    8632:	4770      	bx	lr

00008634 <memset>:
    8634:	0783      	lsls	r3, r0, #30
    8636:	b530      	push	{r4, r5, lr}
    8638:	d048      	beq.n	86cc <memset+0x98>
    863a:	1e54      	subs	r4, r2, #1
    863c:	2a00      	cmp	r2, #0
    863e:	d03f      	beq.n	86c0 <memset+0x8c>
    8640:	b2ca      	uxtb	r2, r1
    8642:	4603      	mov	r3, r0
    8644:	e001      	b.n	864a <memset+0x16>
    8646:	3c01      	subs	r4, #1
    8648:	d33a      	bcc.n	86c0 <memset+0x8c>
    864a:	f803 2b01 	strb.w	r2, [r3], #1
    864e:	079d      	lsls	r5, r3, #30
    8650:	d1f9      	bne.n	8646 <memset+0x12>
    8652:	2c03      	cmp	r4, #3
    8654:	d92d      	bls.n	86b2 <memset+0x7e>
    8656:	b2cd      	uxtb	r5, r1
    8658:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
    865c:	2c0f      	cmp	r4, #15
    865e:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
    8662:	d936      	bls.n	86d2 <memset+0x9e>
    8664:	f1a4 0210 	sub.w	r2, r4, #16
    8668:	f022 0c0f 	bic.w	ip, r2, #15
    866c:	f103 0e20 	add.w	lr, r3, #32
    8670:	44e6      	add	lr, ip
    8672:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    8676:	f103 0210 	add.w	r2, r3, #16
    867a:	e942 5504 	strd	r5, r5, [r2, #-16]
    867e:	e942 5502 	strd	r5, r5, [r2, #-8]
    8682:	3210      	adds	r2, #16
    8684:	4572      	cmp	r2, lr
    8686:	d1f8      	bne.n	867a <memset+0x46>
    8688:	f10c 0201 	add.w	r2, ip, #1
    868c:	f014 0f0c 	tst.w	r4, #12
    8690:	eb03 1202 	add.w	r2, r3, r2, lsl #4
    8694:	f004 0c0f 	and.w	ip, r4, #15
    8698:	d013      	beq.n	86c2 <memset+0x8e>
    869a:	f1ac 0304 	sub.w	r3, ip, #4
    869e:	f023 0303 	bic.w	r3, r3, #3
    86a2:	3304      	adds	r3, #4
    86a4:	4413      	add	r3, r2
    86a6:	f842 5b04 	str.w	r5, [r2], #4
    86aa:	4293      	cmp	r3, r2
    86ac:	d1fb      	bne.n	86a6 <memset+0x72>
    86ae:	f00c 0403 	and.w	r4, ip, #3
    86b2:	b12c      	cbz	r4, 86c0 <memset+0x8c>
    86b4:	b2ca      	uxtb	r2, r1
    86b6:	441c      	add	r4, r3
    86b8:	f803 2b01 	strb.w	r2, [r3], #1
    86bc:	429c      	cmp	r4, r3
    86be:	d1fb      	bne.n	86b8 <memset+0x84>
    86c0:	bd30      	pop	{r4, r5, pc}
    86c2:	4664      	mov	r4, ip
    86c4:	4613      	mov	r3, r2
    86c6:	2c00      	cmp	r4, #0
    86c8:	d1f4      	bne.n	86b4 <memset+0x80>
    86ca:	e7f9      	b.n	86c0 <memset+0x8c>
    86cc:	4603      	mov	r3, r0
    86ce:	4614      	mov	r4, r2
    86d0:	e7bf      	b.n	8652 <memset+0x1e>
    86d2:	461a      	mov	r2, r3
    86d4:	46a4      	mov	ip, r4
    86d6:	e7e0      	b.n	869a <memset+0x66>

000086d8 <__call_exitprocs>:
    86d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    86dc:	4b2d      	ldr	r3, [pc, #180]	; (8794 <__call_exitprocs+0xbc>)
    86de:	b083      	sub	sp, #12
    86e0:	4683      	mov	fp, r0
    86e2:	6818      	ldr	r0, [r3, #0]
    86e4:	f8cd b004 	str.w	fp, [sp, #4]
    86e8:	460f      	mov	r7, r1
    86ea:	f000 f873 	bl	87d4 <__retarget_lock_acquire_recursive>
    86ee:	4b2a      	ldr	r3, [pc, #168]	; (8798 <__call_exitprocs+0xc0>)
    86f0:	f8d3 8000 	ldr.w	r8, [r3]
    86f4:	f8d8 6148 	ldr.w	r6, [r8, #328]	; 0x148
    86f8:	b19e      	cbz	r6, 8722 <__call_exitprocs+0x4a>
    86fa:	f04f 0901 	mov.w	r9, #1
    86fe:	f04f 0a00 	mov.w	sl, #0
    8702:	6874      	ldr	r4, [r6, #4]
    8704:	1e65      	subs	r5, r4, #1
    8706:	d40c      	bmi.n	8722 <__call_exitprocs+0x4a>
    8708:	3401      	adds	r4, #1
    870a:	eb06 0484 	add.w	r4, r6, r4, lsl #2
    870e:	b17f      	cbz	r7, 8730 <__call_exitprocs+0x58>
    8710:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
    8714:	42bb      	cmp	r3, r7
    8716:	d00b      	beq.n	8730 <__call_exitprocs+0x58>
    8718:	3d01      	subs	r5, #1
    871a:	1c6b      	adds	r3, r5, #1
    871c:	f1a4 0404 	sub.w	r4, r4, #4
    8720:	d1f5      	bne.n	870e <__call_exitprocs+0x36>
    8722:	4b1c      	ldr	r3, [pc, #112]	; (8794 <__call_exitprocs+0xbc>)
    8724:	6818      	ldr	r0, [r3, #0]
    8726:	b003      	add	sp, #12
    8728:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    872c:	f000 b854 	b.w	87d8 <__retarget_lock_release_recursive>
    8730:	6873      	ldr	r3, [r6, #4]
    8732:	6822      	ldr	r2, [r4, #0]
    8734:	3b01      	subs	r3, #1
    8736:	42ab      	cmp	r3, r5
    8738:	bf0c      	ite	eq
    873a:	6075      	streq	r5, [r6, #4]
    873c:	f8c4 a000 	strne.w	sl, [r4]
    8740:	2a00      	cmp	r2, #0
    8742:	d0e9      	beq.n	8718 <__call_exitprocs+0x40>
    8744:	f8d6 0188 	ldr.w	r0, [r6, #392]	; 0x188
    8748:	f8d6 b004 	ldr.w	fp, [r6, #4]
    874c:	fa09 f105 	lsl.w	r1, r9, r5
    8750:	4201      	tst	r1, r0
    8752:	d10b      	bne.n	876c <__call_exitprocs+0x94>
    8754:	4790      	blx	r2
    8756:	6872      	ldr	r2, [r6, #4]
    8758:	455a      	cmp	r2, fp
    875a:	d112      	bne.n	8782 <__call_exitprocs+0xaa>
    875c:	f8d8 3148 	ldr.w	r3, [r8, #328]	; 0x148
    8760:	42b3      	cmp	r3, r6
    8762:	d0d9      	beq.n	8718 <__call_exitprocs+0x40>
    8764:	461e      	mov	r6, r3
    8766:	2e00      	cmp	r6, #0
    8768:	d1cb      	bne.n	8702 <__call_exitprocs+0x2a>
    876a:	e7da      	b.n	8722 <__call_exitprocs+0x4a>
    876c:	f8d6 018c 	ldr.w	r0, [r6, #396]	; 0x18c
    8770:	4201      	tst	r1, r0
    8772:	d10b      	bne.n	878c <__call_exitprocs+0xb4>
    8774:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
    8778:	9801      	ldr	r0, [sp, #4]
    877a:	4790      	blx	r2
    877c:	6872      	ldr	r2, [r6, #4]
    877e:	455a      	cmp	r2, fp
    8780:	d0ec      	beq.n	875c <__call_exitprocs+0x84>
    8782:	f8d8 6148 	ldr.w	r6, [r8, #328]	; 0x148
    8786:	2e00      	cmp	r6, #0
    8788:	d1bb      	bne.n	8702 <__call_exitprocs+0x2a>
    878a:	e7ca      	b.n	8722 <__call_exitprocs+0x4a>
    878c:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
    8790:	4790      	blx	r2
    8792:	e7e0      	b.n	8756 <__call_exitprocs+0x7e>
    8794:	00019300 	.word	0x00019300
    8798:	00008eb8 	.word	0x00008eb8

0000879c <atexit>:
    879c:	2300      	movs	r3, #0
    879e:	4601      	mov	r1, r0
    87a0:	461a      	mov	r2, r3
    87a2:	4618      	mov	r0, r3
    87a4:	f000 b81a 	b.w	87dc <__register_exitproc>

000087a8 <__libc_fini_array>:
    87a8:	b538      	push	{r3, r4, r5, lr}
    87aa:	4b08      	ldr	r3, [pc, #32]	; (87cc <__libc_fini_array+0x24>)
    87ac:	4d08      	ldr	r5, [pc, #32]	; (87d0 <__libc_fini_array+0x28>)
    87ae:	1b5b      	subs	r3, r3, r5
    87b0:	109c      	asrs	r4, r3, #2
    87b2:	d007      	beq.n	87c4 <__libc_fini_array+0x1c>
    87b4:	3b04      	subs	r3, #4
    87b6:	441d      	add	r5, r3
    87b8:	3c01      	subs	r4, #1
    87ba:	f855 3904 	ldr.w	r3, [r5], #-4
    87be:	4798      	blx	r3
    87c0:	2c00      	cmp	r4, #0
    87c2:	d1f9      	bne.n	87b8 <__libc_fini_array+0x10>
    87c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    87c8:	f000 b850 	b.w	886c <_fini>
    87cc:	00018ed4 	.word	0x00018ed4
    87d0:	00018ed0 	.word	0x00018ed0

000087d4 <__retarget_lock_acquire_recursive>:
    87d4:	4770      	bx	lr
    87d6:	bf00      	nop

000087d8 <__retarget_lock_release_recursive>:
    87d8:	4770      	bx	lr
    87da:	bf00      	nop

000087dc <__register_exitproc>:
    87dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    87e0:	f8df a07c 	ldr.w	sl, [pc, #124]	; 8860 <__register_exitproc+0x84>
    87e4:	4606      	mov	r6, r0
    87e6:	f8da 0000 	ldr.w	r0, [sl]
    87ea:	4698      	mov	r8, r3
    87ec:	460f      	mov	r7, r1
    87ee:	4691      	mov	r9, r2
    87f0:	f7ff fff0 	bl	87d4 <__retarget_lock_acquire_recursive>
    87f4:	4b1b      	ldr	r3, [pc, #108]	; (8864 <__register_exitproc+0x88>)
    87f6:	681b      	ldr	r3, [r3, #0]
    87f8:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
    87fc:	b324      	cbz	r4, 8848 <__register_exitproc+0x6c>
    87fe:	6865      	ldr	r5, [r4, #4]
    8800:	2d1f      	cmp	r5, #31
    8802:	dc26      	bgt.n	8852 <__register_exitproc+0x76>
    8804:	b95e      	cbnz	r6, 881e <__register_exitproc+0x42>
    8806:	1c6b      	adds	r3, r5, #1
    8808:	3502      	adds	r5, #2
    880a:	f8da 0000 	ldr.w	r0, [sl]
    880e:	6063      	str	r3, [r4, #4]
    8810:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
    8814:	f7ff ffe0 	bl	87d8 <__retarget_lock_release_recursive>
    8818:	2000      	movs	r0, #0
    881a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    881e:	eb04 0185 	add.w	r1, r4, r5, lsl #2
    8822:	2301      	movs	r3, #1
    8824:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
    8828:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
    882c:	40ab      	lsls	r3, r5
    882e:	431a      	orrs	r2, r3
    8830:	2e02      	cmp	r6, #2
    8832:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
    8836:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
    883a:	d1e4      	bne.n	8806 <__register_exitproc+0x2a>
    883c:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
    8840:	4313      	orrs	r3, r2
    8842:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
    8846:	e7de      	b.n	8806 <__register_exitproc+0x2a>
    8848:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
    884c:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
    8850:	e7d5      	b.n	87fe <__register_exitproc+0x22>
    8852:	f8da 0000 	ldr.w	r0, [sl]
    8856:	f7ff ffbf 	bl	87d8 <__retarget_lock_release_recursive>
    885a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    885e:	e7dc      	b.n	881a <__register_exitproc+0x3e>
    8860:	00019300 	.word	0x00019300
    8864:	00008eb8 	.word	0x00008eb8

00008868 <_exit>:
    8868:	e7fe      	b.n	8868 <_exit>
    886a:	bf00      	nop

Disassembly of section .fini:

0000886c <_fini>:
    886c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    886e:	bf00      	nop
    8870:	bcf8      	pop	{r3, r4, r5, r6, r7}
    8872:	bc08      	pop	{r3}
    8874:	469e      	mov	lr, r3
    8876:	4770      	bx	lr
